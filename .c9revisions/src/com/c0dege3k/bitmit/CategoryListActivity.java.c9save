{"ts":1366213398300,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"package com.c0dege3k.bitmit;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.support.v4.app.FragmentActivity;\n\n\n/**\n * An activity representing a list of Products. This activity\n * has different presentations for handset and tablet-size devices. On\n * handsets, the activity presents a list of items, which when touched,\n * lead to a {@link ProductDetailActivity} representing\n * item details. On tablets, the activity presents the list of items and\n * item details side-by-side using two vertical panes.\n * <p>\n * The activity makes heavy use of fragments. The list of items is a\n * {@link CategoryListFragment} and the item details\n * (if present) is a {@link ProductDetailFragment}.\n * <p>\n * This activity also implements the required\n * {@link CategoryListFragment.Callbacks} interface\n * to listen for item selections.\n */\npublic class CategoryListActivity extends FragmentActivity\n        implements CategoryListFragment.Callbacks {\n\n    /**\n     * Whether or not the activity is in two-pane mode, i.e. running on a tablet\n     * device.\n     */\n    private boolean mTwoPane;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_product_list);\n\n        if (findViewById(R.id.product_detail_container) != null) {\n            // The detail container view will be present only in the\n            // large-screen layouts (res/values-large and\n            // res/values-sw600dp). If this view is present, then the\n            // activity should be in two-pane mode.\n            mTwoPane = true;\n\n            // In two-pane mode, list items should be given the\n            // 'activated' state when touched.\n            ((CategoryListFragment) getSupportFragmentManager()\n                    .findFragmentById(R.id.product_list))\n                    .setActivateOnItemClick(true);\n        }\n\n        // TODO: If exposing deep links into your app, handle intents here.\n    }\n\n    /**\n     * Callback method from {@link CategoryListFragment.Callbacks}\n     * indicating that the item with the given ID was selected.\n     */\n    @Override\n    public void onItemSelected(String id) {\n        if (mTwoPane) {\n            // In two-pane mode, show the detail view in this activity by\n            // adding or replacing the detail fragment using a\n            // fragment transaction.\n            Bundle arguments = new Bundle();\n            arguments.putString(ProductDetailFragment.ARG_ITEM_ID, id);\n            ProductDetailFragment fragment = new ProductDetailFragment();\n            fragment.setArguments(arguments);\n            getSupportFragmentManager().beginTransaction()\n                    .replace(R.id.product_detail_container, fragment)\n                    .commit();\n\n        } else {\n            // In single-pane mode, simply start the detail activity\n            // for the selected item ID.\n            Intent detailIntent = new Intent(this, ProductDetailActivity.class);\n            detailIntent.putExtra(ProductDetailFragment.ARG_ITEM_ID, id);\n            startActivity(detailIntent);\n        }\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":3147}]],"length":3147}
